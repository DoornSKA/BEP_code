ets Jul 29 2019 12:21:46

rst:0x1 (POWERON_RESET),boot:0x13 (SPI_FAST_FLASH_BOOT)
configsip: 0, SPIWP:0xee
clk_drv:0x00,q_drv:0x00,d_drv:0x00,cs0_drv:0x00,hd_drv:0x00,wp_drv:0x00
mode:DIO, clock div:2
load:0x3fff0030,len:7172
load:0x40078000,len:15540
load:0x40080400,len:4
ho 8 tail 4 room 4
load:0x40080404,len:3904
entry 0x40080640
[0;32mI (31) boot: ESP-IDF v5.2.1 2nd stage bootloader[0m
[0;32mI (31) boot: compile time May 14 2024 14:26:33[0m
[0;32mI (31) boot: Multicore bootloader[0m
[0;32mI (35) boot: chip revision: v3.1[0m
[0;32mI (39) boot.esp32: SPI Speed      : 40MHz[0m
[0;32mI (44) boot.esp32: SPI Mode       : DIO[0m
[0;32mI (48) boot.esp32: SPI Flash Size : 2MB[0m
[0;32mI (53) boot: Enabling RNG early entropy source...[0m
[0;32mI (58) boot: Partition Table:[0m
[0;32mI (62) boot: ## Label            Usage          Type ST Offset   Length[0m
[0;32mI (69) boot:  0 nvs              WiFi data        01 02 00009000 00006000[0m
[0;32mI (77) boot:  1 phy_init         RF data          01 01 0000f000 00001000[0m
[0;32mI (84) boot:  2 factory          factory app      00 00 00010000 00100000[0m
[0;32mI (92) boot: End of partition table[0m
[0;32mI (96) esp_image: segment 0: paddr=00010020 vaddr=3f400020 size=25e10h (155152) map[0m
[0;32mI (157) esp_image: segment 1: paddr=00035e38 vaddr=3ffb0000 size=0457ch ( 17788) load[0m
[0;32mI (164) esp_image: segment 2: paddr=0003a3bc vaddr=40080000 size=05c5ch ( 23644) load[0m
[0;32mI (174) esp_image: segment 3: paddr=00040020 vaddr=400d0020 size=8d400h (578560) map[0m
[0;32mI (372) esp_image: segment 4: paddr=000cd428 vaddr=40085c5c size=118f4h ( 71924) load[0m
[0;32mI (412) boot: Loaded app from partition at offset 0x10000[0m
[0;32mI (413) boot: Disabling RNG early entropy source...[0m
[0;32mI (424) cpu_start: Multicore app[0m
[0;32mI (433) cpu_start: Pro cpu start user code[0m
[0;32mI (433) cpu_start: cpu freq: 160000000 Hz[0m
[0;32mI (433) cpu_start: Application information:[0m
[0;32mI (436) cpu_start: Project name:     simple[0m
[0;32mI (441) cpu_start: App version:      193a120-dirty[0m
[0;32mI (446) cpu_start: Compile time:     May 24 2024 09:27:06[0m
[0;32mI (452) cpu_start: ELF file SHA256:  026a97fc8...[0m
[0;32mI (458) cpu_start: ESP-IDF:          v5.2.1-dirty[0m
[0;32mI (463) cpu_start: Min chip rev:     v0.0[0m
[0;32mI (468) cpu_start: Max chip rev:     v3.99 [0m
[0;32mI (473) cpu_start: Chip rev:         v3.1[0m
[0;32mI (478) heap_init: Initializing. RAM available for dynamic allocation:[0m
[0;32mI (485) heap_init: At 3FFAE6E0 len 00001920 (6 KiB): DRAM[0m
[0;32mI (491) heap_init: At 3FFB8848 len 000277B8 (157 KiB): DRAM[0m
[0;32mI (497) heap_init: At 3FFE0440 len 00003AE0 (14 KiB): D/IRAM[0m
[0;32mI (503) heap_init: At 3FFE4350 len 0001BCB0 (111 KiB): D/IRAM[0m
[0;32mI (510) heap_init: At 40097550 len 00008AB0 (34 KiB): IRAM[0m
[0;32mI (517) spi_flash: detected chip: generic[0m
[0;32mI (521) spi_flash: flash io: dio[0m
[0;33mW (524) spi_flash: Detected size(4096k) larger than the size in the binary image header(2048k). Using the size in the binary image header.[0m
[0;32mI (539) main_task: Started on CPU0[0m
[0;32mI (549) main_task: Calling app_main()[0m
[0;32mI (579) example: ESP_WIFI_MODE_AP[0m
I (589) wifi:wifi driver task: 3ffc0700, prio:23, stack:6656, core=0
I (599) wifi:wifi firmware version: a9f5b59
I (599) wifi:wifi certification version: v7.0
I (599) wifi:config NVS flash: enabled
I (599) wifi:config nano formating: disabled
I (599) wifi:Init data frame dynamic rx buffer num: 32
I (609) wifi:Init static rx mgmt buffer num: 5
I (609) wifi:Init management short buffer num: 32
I (609) wifi:Init dynamic tx buffer num: 32
I (619) wifi:Init static rx buffer size: 1600
I (619) wifi:Init static rx buffer num: 10
I (629) wifi:Init dynamic rx buffer num: 32
[0;32mI (629) wifi_init: rx ba win: 6[0m
[0;32mI (629) wifi_init: tcpip mbox: 32[0m
[0;32mI (639) wifi_init: udp mbox: 6[0m
[0;32mI (639) wifi_init: tcp mbox: 6[0m
[0;32mI (649) wifi_init: tcp tx win: 5760[0m
[0;32mI (649) wifi_init: tcp rx win: 5760[0m
[0;32mI (649) wifi_init: tcp mss: 1440[0m
[0;32mI (659) wifi_init: WiFi IRAM OP enabled[0m
[0;32mI (659) wifi_init: WiFi RX IRAM OP enabled[0m
[0;32mI (679) phy_init: phy_version 4791,2c4672b,Dec 20 2023,16:06:06[0m
I (759) wifi:mode : softAP (48:e7:29:8c:37:85)
I (859) wifi:Total power save buffer number: 16
I (859) wifi:Init max length of beacon: 752/752
I (869) wifi:Init max length of beacon: 752/752
[0;32mI (869) example: wifi_init_softap finished. SSID:WhereDidTheWormsGo? password:JohanWasHere channel:1[0m
[0;32mI (869) esp_netif_lwip: DHCP server started on interface WIFI_AP_DEF with IP: 192.168.4.1[0m
[0;32mI (889) example: adc_pattern[0].atten is :0[0m
[0;32mI (889) example: adc_pattern[0].channel is :6[0m
[0;32mI (889) example: adc_pattern[0].unit is :0[0m
[0;32mI (899) gpio: GPIO[34]| InputEn: 0| OutputEn: 0| OpenDrain: 0| Pullup: 0| Pulldown: 0| Intr:0 [0m
[0;32mI (909) example: Starting server on port: '80'[0m
[0;32mI (919) example: Registering URI handlers[0m
I (12249) wifi:new:<1,1>, old:<1,1>, ap:<1,1>, sta:<255,255>, prof:1
I (12249) wifi:station: 14:f6:d8:d5:86:8f join, AID=1, bgn, 40U
[0;32mI (12279) example: station 14:f6:d8:d5:86:8f join, AID=1[0m
[0;32mI (12339) esp_netif_lwip: DHCP server assigned IP to a client, IP is: 192.168.4.2[0m
I (13169) wifi:<ba-add>idx:2 (ifx:1, 14:f6:d8:d5:86:8f), tid:0, ssn:13, winSize:64
[0;32mI (22939) example: starting /read_test[0m
[0;32mI (22959) example: sending chunck 1[0m
[0;32mI (22959) example: sending chunck[0m
[0;32mI (22979) example: sending chunck 2[0m
[0;32mI (22979) example: sending chunck[0m
[0;32mI (22989) example: sending chunck 3[0m
[0;32mI (22999) example: sending chunck[0m
[0;32mI (23009) example: sending chunck 4[0m
[0;32mI (23009) example: sending chunck[0m
[0;32mI (23019) example: sending chunck 5[0m
[0;32mI (23029) example: sending chunck[0m
[0;32mI (23039) example: sending chunck 6[0m
[0;32mI (23039) example: sending chunck[0m
[0;32mI (23059) example: sending chunck 7[0m
[0;32mI (23059) example: sending chunck[0m
[0;32mI (23069) example: sending chunck 8[0m
[0;32mI (23079) example: sending chunck[0m
[0;32mI (23089) example: sending chunck 9[0m
[0;32mI (23089) example: sending chunck[0m
[0;32mI (23099) example: sending chunck 10[0m
[0;32mI (23109) example: sending chunck[0m
[0;32mI (23109) example: sending final chunck[0m
[0;33mW (23119) httpd_txrx: httpd_sock_err: error in recv : 104[0m
[0;32mI (47699) example: starting /read_test[0m
[0;32mI (47719) example: sending chunck 1[0m
[0;32mI (47719) example: sending chunck[0m
[0;32mI (47729) example: sending chunck 2[0m
[0;32mI (47739) example: sending chunck[0m
[0;32mI (47749) example: sending chunck 3[0m
[0;32mI (47749) example: sending chunck[0m
[0;32mI (47759) example: sending chunck 4[0m
[0;32mI (47769) example: sending chunck[0m
[0;32mI (47779) example: sending chunck 5[0m
[0;32mI (47779) example: sending chunck[0m
[0;32mI (47799) example: sending chunck 6[0m
[0;32mI (47799) example: sending chunck[0m
[0;32mI (47809) example: sending chunck 7[0m
[0;32mI (47819) example: sending chunck[0m
[0;32mI (47829) example: sending chunck 8[0m
[0;32mI (47829) example: sending chunck[0m
[0;32mI (47849) example: sending chunck 9[0m
[0;32mI (47849) example: sending chunck[0m
[0;32mI (47859) example: sending chunck 10[0m
[0;32mI (47859) example: sending chunck[0m
[0;32mI (47869) example: sending final chunck[0m
[0;33mW (47879) httpd_txrx: httpd_sock_err: error in recv : 104[0m
[0;32mI (63619) example: starting /read_test[0m
[0;32mI (63639) example: sending chunck 1[0m
[0;32mI (63639) example: sending chunck[0m
[0;32mI (63649) example: sending chunck 2[0m
[0;32mI (63659) example: sending chunck[0m
[0;32mI (63669) example: sending chunck 3[0m
[0;32mI (63669) example: sending chunck[0m
[0;32mI (63689) example: sending chunck 4[0m
[0;32mI (63689) example: sending chunck[0m
[0;32mI (63699) example: sending chunck 5[0m
[0;32mI (63699) example: sending chunck[0m
[0;32mI (63719) example: sending chunck 6[0m
[0;32mI (63719) example: sending chunck[0m
[0;32mI (63729) example: sending chunck 7[0m
[0;32mI (63739) example: sending chunck[0m
[0;32mI (63749) example: sending chunck 8[0m
[0;32mI (63749) example: sending chunck[0m
[0;32mI (63769) example: sending chunck 9[0m
[0;32mI (63769) example: sending chunck[0m
[0;32mI (63779) example: sending chunck 10[0m
[0;32mI (63779) example: sending chunck[0m
[0;32mI (63789) example: sending final chunck[0m
[0;33mW (63789) httpd_txrx: httpd_sock_err: error in recv : 104[0m
[0;32mI (106749) example: starting /read_test[0m
[0;32mI (106759) example: sending chunck 1[0m
[0;32mI (106769) example: sending chunck[0m
[0;32mI (106779) example: sending chunck 2[0m
[0;32mI (106779) example: sending chunck[0m
[0;32mI (106799) example: sending chunck 3[0m
[0;32mI (106799) example: sending chunck[0m
[0;32mI (106809) example: sending chunck 4[0m
[0;32mI (106819) example: sending chunck[0m
[0;32mI (106829) example: sending chunck 5[0m
[0;32mI (106829) example: sending chunck[0m
[0;32mI (106839) example: sending chunck 6[0m
[0;32mI (106849) example: sending chunck[0m
[0;32mI (106859) example: sending chunck 7[0m
[0;32mI (106859) example: sending chunck[0m
[0;32mI (106879) example: sending chunck 8[0m
[0;32mI (106879) example: sending chunck[0m
[0;32mI (106889) example: sending chunck 9[0m
[0;32mI (106889) example: sending chunck[0m
[0;32mI (106909) example: sending chunck 10[0m
[0;32mI (106909) example: sending chunck[0m
[0;32mI (106909) example: sending final chunck[0m
[0;33mW (106919) httpd_txrx: httpd_sock_err: error in recv : 104[0m
